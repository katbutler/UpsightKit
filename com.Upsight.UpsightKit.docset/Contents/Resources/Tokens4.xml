<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/USDataPayload.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/USDataPayload</TokenIdentifier>
			<Abstract type="html">Object representing the data payload included with a content unit.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/stringValueForKey:</TokenIdentifier>
			<Abstract type="html">Returns a string value for a given key in the data payload.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable NSString *)stringValueForKey:(nonnull NSString *)aKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>aKey</Name>
					<Abstract type="html">The key corresponding to a string value in the data payload.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A string value for the given key.
Please note that the same key can have unique values for any of the types (string, bool, int, float, color and image).</Abstract></ReturnValue>
			<Anchor>//api/name/stringValueForKey:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/booleanValueForKey:</TokenIdentifier>
			<Abstract type="html">Returns a boolean value for a given key in the data payload.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable NSNumber *)booleanValueForKey:(nonnull NSString *)aKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>aKey</Name>
					<Abstract type="html">The key corresponding to a boolean value in the data payload.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSNumber representing the boolean value for the given key.
Please note that the same key can have unique values for any of the types (string, bool, int, float, color and image).</Abstract></ReturnValue>
			<Anchor>//api/name/booleanValueForKey:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/intValueForKey:</TokenIdentifier>
			<Abstract type="html">Returns an integer value for a given key in the data payload.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable NSNumber *)intValueForKey:(nonnull NSString *)aKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>aKey</Name>
					<Abstract type="html">The key corresponding to a integer value in the data payload.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSNumber representing the integer value for the given key.
Please note that the same key can have unique values for any of the types (string, bool, int, float, color and image).</Abstract></ReturnValue>
			<Anchor>//api/name/intValueForKey:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/floatValueForKey:</TokenIdentifier>
			<Abstract type="html">Returns a float value for a given key in the data payload.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable NSNumber *)floatValueForKey:(nonnull NSString *)aKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>aKey</Name>
					<Abstract type="html">The key corresponding to a float value in the data payload.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSNumber representing the float value for the given key.
Please note that the same key can have unique values for any of the types (string, bool, int, float, color and image).</Abstract></ReturnValue>
			<Anchor>//api/name/floatValueForKey:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/colorValueForKey:</TokenIdentifier>
			<Abstract type="html">Returns a UIColor for the given key in the data payload.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable UIColor *)colorValueForKey:(nonnull NSString *)aKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>aKey</Name>
					<Abstract type="html">The key corresponding to a color value in the data payload.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A UIColor representing the color value for the given key.
Please note that the same key can have unique values for any of the types (string, bool, int, float, color and image).</Abstract></ReturnValue>
			<Anchor>//api/name/colorValueForKey:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/imageForKey:</TokenIdentifier>
			<Abstract type="html">Returns the local file path to an image for the given key in the data payload.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable USDataImage *)imageForKey:(nonnull NSString *)aKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>aKey</Name>
					<Abstract type="html">The key corresponding to the image path in the data payload.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A string representing the image path for the given key.
Please note that the same key can have unique values for any of the types (string, bool, int, float, color and image).</Abstract></ReturnValue>
			<Anchor>//api/name/imageForKey:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/recordImpressionEvent</TokenIdentifier>
			<Abstract type="html">Tracks an impression.  Should be called if content is displayed to the user.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (void)recordImpressionEvent</Declaration>
			
			
			<Anchor>//api/name/recordImpressionEvent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/recordClickEvent</TokenIdentifier>
			<Abstract type="html">Sends a click event.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (void)recordClickEvent</Declaration>
			
			
			<Anchor>//api/name/recordClickEvent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/recordDismissedEvent</TokenIdentifier>
			<Abstract type="html">Tracks when displayed content has been dismissed.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (void)recordDismissedEvent</Declaration>
			
			
			<Anchor>//api/name/recordDismissedEvent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/destroy</TokenIdentifier>
			<Abstract type="html">Destroy closes the data payload and cleans up any associated objects.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (void)destroy</Declaration>
			
			
			<Anchor>//api/name/destroy</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/record:</TokenIdentifier>
			<Abstract type="html">Emits an event associated with the USDataPayload.
  It has no effect after billboardDidDismiss is called for the billboard</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (BOOL)record:(nonnull const NSString *)aEvent</Declaration>
			
			<ReturnValue><Abstract type="html">a bool with a values of YES if the event exists as a part of the data payload.</Abstract></ReturnValue>
			<Anchor>//api/name/record:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/USDataPayload/getRawData</TokenIdentifier>
			<Abstract type="html">Used only for campaigns using the ‘Raw’ data input format.</Abstract>
			<DeclaredIn>USDataPayload.h</DeclaredIn>
			
			<Declaration>- (nullable NSDictionary *)getRawData</Declaration>
			
			<ReturnValue><Abstract type="html">Returns an NSDictionary representation of a data payload for Native Messaging campaigns created using the ‘Raw’ input format. If a Native Messaging campaign was created using the ‘Basic’ data input format, this method will return nil.</Abstract></ReturnValue>
			<Anchor>//api/name/getRawData</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
        
	</File>
</Tokens>